{"primaryContentSections":[{"kind":"content","content":[{"anchor":"How-to-traverse-a-BinaryTree","level":2,"type":"heading","text":"How to traverse a BinaryTree"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"create a Tree"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"add some nodes"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"call "},{"type":"codeVoice","code":"tree.mapInOrder(tree:)"},{"type":"text","text":" or any other implementation"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can pass in a closure, so while traversing the tree that closure gets fired on each node."}]},{"type":"codeListing","syntax":"swift","code":["if let rootNode = tree.root {","    tree.mapInOrder(tree: rootNode) { (nodeData: String?) in","        print(\"Visiting node: \\(String(describing: nodeData))\")","    }","}"]},{"anchor":"mapInOrder","level":2,"type":"heading","text":"mapInOrder"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Algorithm Inorder(tree)"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Traverse the left subtree, i.e., call Inorder(left-subtree)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Visit the root."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Traverse the right subtree, i.e., call Inorder(right-subtree)"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For this tree:"}]},{"type":"codeListing","syntax":null,"code":["               1","       |-------|-------|","       2               3","   |-------|","   4       5"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"will print "},{"type":"codeVoice","code":"4 2 5 1 3"}]},{"anchor":"mapPreOrder","level":2,"type":"heading","text":"mapPreOrder"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Algorithm Preorder(tree)"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Visit the root."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Traverse the left subtree, i.e., call Preorder(left-subtree)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Traverse the right subtree, i.e., call Preorder(right-subtree)"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For this tree:"}]},{"type":"codeListing","syntax":null,"code":["                1","        |-------|-------|","        2               3","    |-------|","    4       5"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"will print "},{"type":"codeVoice","code":"1 2 4 5 3"}]},{"anchor":"mapPostOrder","level":2,"type":"heading","text":"mapPostOrder"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Algorithm Postorder(tree)"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Traverse the left subtree, i.e., call Postorder(left-subtree)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Traverse the right subtree, i.e., call Postorder(right-subtree)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Visit the root."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For this tree:"}]},{"type":"codeListing","syntax":null,"code":["                1","        |-------|-------|","        2               3","    |-------|","    4       5"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"will print "},{"type":"codeVoice","code":"4 5 2 3 1"}]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/binarytree\/traversing"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/Traversing","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Here youâ€™ll find the different options for traversing a tree"}],"kind":"article","metadata":{"roleHeading":"Article","title":"Traversing a Tree","role":"article","modules":[{"name":"BinaryTree"}]},"hierarchy":{"paths":[["doc:\/\/BinaryTree\/documentation\/BinaryTree"]]},"references":{"doc://BinaryTree/documentation/BinaryTree":{"role":"collection","title":"BinaryTree","abstract":[{"type":"text","text":"This is a simple implementation of a BinaryTree that can be stored using Realm."}],"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree","kind":"symbol","type":"topic","url":"\/documentation\/binarytree"}}}